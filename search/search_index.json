{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Pr\u00e1ctica de ampliaci\u00f3n: Configuraci\u00f3n de un servidor Nginx con Hosts Virtuales y directorios de usuario","text":"<p>La implementaci\u00f3n de esta pr\u00e1ctica implica la configuraci\u00f3n de un servidor web Nginx para el enrutamiento de m\u00faltiples rutas asociadas a los usuarios que se generar\u00e1n.</p>"},{"location":"#conexion-al-servidor-mediante-ssh","title":"Conexi\u00f3n al servidor mediante SSH","text":"<p>Para la ejecuci\u00f3n de la pr\u00e1ctica, se proceder\u00e1 utilizando el protocolo SSH como m\u00e9todo de conexi\u00f3n al servidor desde el anfitri\u00f3n, y se adjunta una captura de pantalla que documenta el proceso de acceso al servidor.</p> <pre><code>    ssh &lt;user&gt;@&lt;host&gt;\n</code></pre> <p></p>"},{"location":"#creacion-de-usuarios-y-carpetas","title":"Creaci\u00f3n de usuarios y carpetas","text":"<p>En esta secci\u00f3n, llevaremos a cabo la creaci\u00f3n de dos usuarios, junto con sus respectivas carpetas asignadas</p>"},{"location":"#creacion-de-usuarios","title":"Creaci\u00f3n de usuarios","text":"<p>Creamos los usuarios necesarios para esta pr\u00e1ctica. que seri\u00e1n los usuarios <code>mohamed</code> y <code>fettouma</code>, usando los comandos siguientes.</p> <p></p> <pre><code>    sudo useradd -m -s /bin/shell &lt;username&gt;\n</code></pre> <ul> <li><code>useradd</code>: Comando para crear un nuevo usuario</li> <li><code>-m</code>: Crea autom\u00e1ticamente la carpeta home del usuario.</li> <li><code>-s</code>: /bin/bash: Asigna bash como shell predeterminada.</li> <li><code>&lt;username&gt;</code>: Nombre del usuario a crear.</li> </ul> <p></p> <pre><code>    sudo passwd &lt;username&gt;\n</code></pre> <ul> <li><code>passwd</code>: Comando para establecer</li> <li><code>&lt;username&gt;</code>: Nombre del usuario al que se le asignar\u00e1 la contrase\u00f1a</li> </ul> <p>En mi caso ser\u00eda:</p> <p></p> <p>Se han creado los usuarios <code>mohamed</code> y <code>fettouma</code> con sus directorios correspondientes (en home).</p> <p></p>"},{"location":"#creacion-de-carpetas-con-los-permisos-necesarios","title":"Creaci\u00f3n de carpetas con los permisos necesarios","text":"<p>Vamos a crear una carpeta para que Nginx pueda mostrar las p\u00e1ginas web de cada usuario. seguimos los siguientes pasos:</p> <ol> <li>Iniciamos sesion con el usuario usando <code>su &lt;username&gt;</code></li> <li>Nos dirigimos a la carpeta <code>cd ~</code></li> <li>Creamos la carpeta <code>public_html</code> donde se guardar\u00e1n los archivos de la web. <code>mkdir public_html</code></li> <li> <p>Cambiar los permisos para que pueda acceder nginx usando el comando <code>setfacl</code> que permite manejar permisos de archivos y carpetas de una manera m\u00e1s detallada que el comando <code>chmod</code>.</p> <p>-&gt; Estructura del comando: <code>bash     setfacl [options] [mode] [file]</code></p> <ul> <li><code>options</code>: puede ser -x (exluir) -m (modificar) -b (eliminar) -R (recursividad) -d (se aplican los permisos a cada archivo que se crea posteriormente)</li> <li><code>mode</code>: para especificar si es un usuario, un grupo o otros especificando los permisos deseados Ejemplo: u:username:rwx.</li> <li><code>file</code>: el archivo o direcotio al cual se aplicar\u00e1n los permisos</li> </ul> </li> <li> <p>Comprobar que se hayan establecido los permisos de forma correcta usando el comando:     <code>bash         getfacl &lt;filename&gt;</code></p> </li> </ol> <p></p> <p>En mi caso seria lo siguiente para los dos usuarios:</p> <ul> <li>Usuario mohamed</li> </ul> <p></p> <ul> <li>Usuario fettouma</li> </ul> <p></p>"},{"location":"#creacion-de-paginas-webs-estaticas","title":"Creaci\u00f3n de p\u00e1ginas webs est\u00e1ticas","text":"<p>Creamos una p\u00e1gina est\u00e1tica b\u00e1sica para cada usuario para comprobar el funcionamiento de nuestro servidor.</p> <ul> <li>usuario mohamed</li> </ul> <p></p> <ul> <li>usuario fettouma</li> </ul> <p></p>"},{"location":"#nginx","title":"Nginx","text":"<p>En esta secci\u00f3n vamos a instalar y configurar nginx para acceder a nuestros hosts virtuales.</p>"},{"location":"#instalacion-de-nginx","title":"Instalaci\u00f3n de Nginx","text":"<p>Instalamos Nginx mediante el gestor de paquetes de debian <code>apt</code>.</p> <p>Comandos a ejecutar: </p> <pre><code>    sudo apt-get update # Actualiza la lista de paquetes disponibles y sus versiones en los repositorios configurados\n    sudo apt-get upgrade #  Instala las actualizaciones de los paquetes ya instalados en el sistema, sin eliminar ni instalar nuevos paquetes\n    sudo apt-get install nginx -y # Instala el servidor web Nginx en el sistema. La opci\u00f3n -y (opcional) acepta autom\u00e1ticamente todas las preguntas durante la instalaci\u00f3n\n</code></pre> <p></p> <p>Ejecutamos el comando siguiente para comprobar que todo funciona correctamente</p> <p></p> <p>O tambi\u00e9n aceediendo a la p\u00e1gina por defecto de Nginx desde el navegador <code>http://127.0.0.1/</code></p>"},{"location":"#generacion-de-los-certificados-ssl","title":"Generaci\u00f3n de los certificados SSL","text":"<p>Antes de proceder a la configuraci\u00f3n de los hosts virtuales, generamos las claves ssl para una conexi\u00f3n segura mediante https aplicando el comando:</p> <pre><code>    sudo openssl -req -x509 -newkey rsa:4096 -days 365 -sha256 -nodes -out &lt;archivo_cert&gt; -keyout &lt;archivo_key&gt;\n</code></pre> <ul> <li><code>-req</code>: Indica que se est\u00e1 procesando una solicitud de certificado.</li> <li><code>-x509</code>: Genera un certificado autofirmado en lugar de una solicitud de certificado.</li> <li><code>-newkey rsa:4096</code>: Crea una nueva clave privada RSA de 4096 bits.</li> <li><code>-days 365</code>: Establece la validez del certificado por 365 d\u00edas14.</li> <li><code>-sha256</code>: Utiliza el algoritmo de hash SHA-256 para firmar el certificado.</li> <li><code>-nodes</code>: No cifra la clave privada.</li> <li><code>-out &lt;archivo_cert&gt;</code>: Especifica el nombre del archivo de salida para el certificado.</li> <li><code>-keyout &lt;archivo_key&gt;</code>: Especifica el nombre del archivo de salida para la clave privada.</li> </ul> <p>Generamos uno para cada usuario:</p> <p></p>"},{"location":"#configuracion-de-los-hosts-virtuales","title":"Configuraci\u00f3n de los Hosts Virtuales:","text":"<p>Para configurar nuesto host virtual para que redirija las peticiones http a https metemos el siguiente bloque server:</p> <pre><code>server {\n    listen 80;\n    listen [::]:80;\n    server_name ejemplo.com;\n\n    # Redirigir las peticiones http a https con el mismo host y URI\n    return 301 https://$host$request_uri;\n}\n</code></pre> <p>Bloque server para la configuraci\u00f3n de HTTPS con las claves ssl generadas anteriormente:</p> <pre><code>server {\n    listen 443 ssl;\n    listen [::]:443 ssl;\n\n    # Nombre del servidor\n    server_name ejemplo.com;\n\n    # Ruta a la raiz del servidor\n    root /ruta/a/public_html;\n    index index.html index.htm index.debian-html;\n\n    # Claves SSL generadas\n    ssl_certificate /ruta/al/certificado.pem;\n    ssl_certificate_key /ruta/a/clave_privada.key;\n\n    location / {\n        # Si no se encuentra la ruta se devuelve un error 404\n        try_files $uri $uri/ =404;\n    }\n}\n</code></pre> <p></p> <p>En mi caso es: (para la pagina del usuario mohamed) </p> <p></p>"},{"location":"#activar-los-hosts-virtuales","title":"Activar los hosts virtuales","text":"<p>Para activar nuestros hosts, hay que crear enlaces simbolicos de los archivos de configuracion creados al directorio <code>/etc/nginx/sites-enabled</code></p> <pre><code>    sudo ln -s /etc/nginx/sites-available/&lt;conf_file&gt; /etc/nginx/sites-enabled\n</code></pre> <p>En mi caso es:</p> <p></p> <p>Comprobamos la sintaxis de los archivos de configuracion, si todo OK, reiniciamos el servicio de Nginx:</p> <p>Comando para comprobar la sintaxis:</p> <pre><code>    sudo nginx -t\n</code></pre> <p>Comando para reiniciar el servicio de Nginx:</p> <pre><code>    sudo systemctl restart nginx\n</code></pre> <p></p>"},{"location":"#agregar-los-nombres-de-los-hosts","title":"Agregar los nombres de los hosts:","text":"<p>Para poder acceder a nuestros hosts desde la m\u00e1quina anfitriona, hay que a\u00f1adirlos al archivo hosts, situado en <code>C:\\Windows\\System32\\drivers\\etc\\hosts</code> para Windows y <code>/etc/hosts</code> para Linux.</p> <p></p>"},{"location":"#prueba-de-funcionamiento-de-los-hosts","title":"Prueba de funcionamiento de los hosts","text":"<p>Y ahora ya podemos proceder a la comprobaci\u00f3n del funcionamiento de nuestros hosts virtuales.</p> <ul> <li>Para el usuario <code>mohamed</code></li> </ul> <p></p> <ul> <li>Detalles del certificado autofirmado:</li> </ul> <p></p> <ul> <li>Para el usuario <code>fettouma</code></li> </ul> <p></p>"}]}